<!-- SPDX-FileCopyrightText: 2020 Splunk Inc (AK Khamis) <akhamis@splunk.com>
SPDX-License-Identifier: Apache-2.0 --><form theme="dark">
  <label>SH - 12 - Scheduled Search Balance - Dashboard - v3.0.7</label>
  <description>Create an Ephemeral Account on the search head you need to run curl on, make that user admin.  Delete the user when you are done with your change.</description>
  <fieldset submitButton="true" autoRun="false"></fieldset>
  <row>
    <panel>
      <html>
        <h1 style="color:rgb(207,49,128);font-size:25px;text-align:center">SH - 12 - Scheduled Search Balance - Dashboard - v1 (Updated: Jan 31, 2021)</h1>
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <input type="dropdown" token="shcluster_label" searchWhenChanged="true">
        <label>1. Splunk SH (Cluster/Instance)</label>
        <fieldForLabel>shcluster_label</fieldForLabel>
        <fieldForValue>shcluster_label</fieldForValue>
        <search>
          <query>| from lookup:splunk_rest_assets_kv_store_lookup 
| stats count by shcluster_label</query>
        </search>
        <choice value="*">All</choice>
        <default>*</default>
        <initialValue>*</initialValue>
      </input>
      <input type="multiselect" token="tok_app">
        <label>2. App</label>
        <choice value="*">ALL</choice>
        <fieldForLabel>app</fieldForLabel>
        <fieldForValue>app</fieldForValue>
        <search>
          <query>| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
| stats count by app</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
        </search>
        <default>*</default>
        <delimiter> </delimiter>
      </input>
      <input type="dropdown" token="tok_cron_cat">
        <label>3. Cron Category</label>
        <choice value="*">ALL</choice>
        <default>*</default>
        <fieldForLabel>category</fieldForLabel>
        <fieldForValue>category</fieldForValue>
        <search>
          <query>| from lookup:cron_schedule_category_remapper_lookup
| fields category</query>
          <earliest>-15m</earliest>
          <latest>now</latest>
        </search>
      </input>
      <input type="text" token="tok_user">
        <label>4. User</label>
        <default>*</default>
        <initialValue>*</initialValue>
      </input>
      <input type="text" token="stack">
        <label>5. Stack Name</label>
        <default>localhost</default>
        <initialValue>localhost</initialValue>
      </input>
      <input type="text" token="account">
        <label>6. Ephemeral Account ID</label>
        <default>int_123</default>
        <initialValue>int_123</initialValue>
      </input>
      <input type="text" token="password">
        <label>7. Ephemeral Account Password</label>
        <default>password</default>
        <initialValue>password</initialValue>
      </input>
      <input type="dropdown" token="keeper">
        <label>Include Balanced</label>
        <choice value="noop">Yes</choice>
        <choice value="where keeper=1">No</choice>
        <default>where keeper=1</default>
        <initialValue>where keeper=1</initialValue>
      </input>
      <input type="dropdown" token="cron_schedule_described">
        <label>cron_schedule_described</label>
        <choice value="*">All</choice>
        <default>*</default>
        <initialValue>*</initialValue>
        <fieldForLabel>cron_schedule_described</fieldForLabel>
        <fieldForValue>cron_schedule_described</fieldForValue>
        <search>
          <query>| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
| `cron_descriptor(cron_schedule)` 
| stats count by cron_schedule_described</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
      </input>
      <input type="text" token="cron_schedule_described">
        <label>cron_schedule_described</label>
        <default>*</default>
        <initialValue>*</initialValue>
      </input>
    </panel>
  </row>
  <row>
    <panel>
      <title>schedule generator</title>
      <table>
        <search>
          <query>| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
| search is_scheduled=1 disabled=0 author IN ( $tok_user$ ) app IN ( $tok_app$ ) shcluster_label="$shcluster_label$" NOT (earliest_time=rt* OR latest_time=rt* OR summary_index=1 OR savedsearch_search=*timechart* OR savedsearch_search=*bin* OR savedsearch_search=*span* OR savedsearch_search=*bucket* ) 
| eval fudge_author = case (
    'sharing' == "user", 'author',
    'sharing' == "global", "nobody",
    'sharing' == "app", "nobody") 
| search `gmc_comment("MACRO TO BREAK DOWN THE CRON SCHEDULE INTO ATOMS, EMITS THOSE, nth_minute, AND THE CURRENTLY IDENTIFIED CATEGORY IF ANY")` 
| `gmc_categorize_cron_schedule(cron_schedule)` 
| search category="$tok_cron_cat$" 
| eval schedule_interval=case(
    category="every minute", 60,
    searchmatch("category=\"every * minutes\""), nth_minute*60,
    category="hourly", 3600,
    category="daily", 86400
    ) 
| search `gmc_comment("LOOKUP TO GET new_category FROM category, AND reset_count")` 
| lookup cron_schedule_category_remapper_lookup category 
| eval new_schedule_interval=case(
    new_category="every minute", 60,
    searchmatch("new_category=\"every * minutes\""), new_nth_minute*60,
    new_category="hourly", 3600,
    new_category="daily", 86400
    ) 
| eval keeper=if(searchmatch("new_category=daily minute=0") OR searchmatch("new_category=hourly minute=0") OR new_category="every 5 minutes" OR new_category="every 10 minutes" OR new_category="every 30 minutes" OR new_category="every 15 minutes", 1, 0) 
| $keeper$
| sort cron_schedule 
| eval min_slots="0 1 2 3 4 6 7 8 9 11 12 13 14 16 17 18 19 21 22 23 24 26 27 28 29" 
| makemv min_slots 
| streamstats count reset_after="count=reset_count" by new_category 
| eval upper_bound=59 
| eval output_count=mvindex(min_slots, count) 
| eval new_cron=case(
    searchmatch("new_category=daily minute=0"), output_count . " ". hour . " " . domonth . " " . month . " " . doweek,
    searchmatch("new_category=daily minute!=0"), cron_schedule,
    searchmatch("new_category=hourly minute=0"), output_count . " ". hour . " " . domonth . " " . month . " " . doweek,
    searchmatch("new_category=hourly minute!=0"), cron_schedule,
    new_category="every 5 minutes" OR new_category="every 10 minutes" OR new_category="every 30 minutes" OR new_category="every 15 minutes", output_count . "-59/" . new_nth_minute . " " . hour . " " . domonth . " " . month . " " . doweek
    ) 
| rex mode=sed field=new_cron "s/x/*/g" 
| eval encoded_title=savedsearch_name 
| eval base_hour=if(hour="x", "14", hour) 
| eval base_minute=if(searchmatch("category=\"every * minutes\""), nth_minute, minute) 
| eval basetime=strptime("2020-07-14 " . printf("%01d", base_hour) . " " . printf("%01d", base_minute), "%F %H %M") 
| eval seconds_searched=round(relative_time(basetime, dispatch_latest_time)-relative_time(basetime, dispatch_earliest_time)) 
| eval seconds_gap=if(schedule_interval&gt;seconds_searched, schedule_interval-seconds_searched, null() ) 
| rex field=encoded_title mode=sed
    "s:%:%25:g s:\+:%2B:g s:\":%22:g s:\(:%28:g s:\):%29:g s: :%20:g  s:&lt;:%3C:g  s:&gt;:%3E:g  s:#:%23:g  s:{:%7B:g  s:}:%7D:g  s:\|:%7C:g s:\\\:%5C:g  s:\^:%5E:g  s:~:%7E:g
     s:\[:%5B:g  s:\]:%5D:g  s:\`:%60:g  s:;:%3B:g  s:/:%2F:g  s:\?:%3F:g  s/:/%3A/g  s:@:%40:g  s:=:%3D:g  s:&amp;:%26:g  s:\$:%24:g  s:\!:%21:g  s:\*:%2A:g" 
| eval change_script="curl -k -u $account$:$password$ -XPOST \"https://$stack$:8089/servicesNS/" + fudge_author + "/" + 'app' + "/saved/searches/" + encoded_title + "\"" + " -d " + "cron_schedule=\"" + new_cron + "\" || true" 
| eval rollback_script="curl -k -u $account$:$password$ -XPOST \"https://$stack$:8089/servicesNS/" + fudge_author + "/" + 'app' + "/saved/searches/" + encoded_title + "\"" + " -d " + "cron_schedule=\"" + cron_schedule + "\" || true" 
| `cron_descriptor(cron_schedule)` 
| table shcluster_label app sharing author savedsearch_name cron_schedule cron_schedule_described category allow_skew schedule_window schedule_priority realtime_schedule dispatch_earliest_time dispatch_latest_time schedule_interval seconds_searched seconds_gap new_cron new_category new_schedule_interval change_script rollback_script reset_count output_count description 
| `rename_saved_searches_fields`</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">10</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
        <option name="totalsRow">false</option>
        <option name="wrap">false</option>
        <format type="color" field="author">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="color" field="category">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="color" field="new_category">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="color" field="schedule_interval">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="color" field="new_schedule_interval">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="color" field="Job Name">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="color" field="author">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="color" field="category">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="color" field="new_category">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="color" field="schedule_interval">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="color" field="new_schedule_interval">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="color" field="Job Name">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="color" field="Job Schedule">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="color" field="Job App">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
        <format type="color" field="Job App Sharing">
          <colorPalette type="map">{"user":#DC4E41,"app":#53A051,"global":#F8BE34}</colorPalette>
        </format>
        <format type="color" field="Job Schedule Window">
          <colorPalette type="map">{"0":#DC4E41,"auto":#53A051}</colorPalette>
        </format>
        <format type="color" field="Job Allow Skew">
          <colorPalette type="map">{"0":#DC4E41}</colorPalette>
        </format>
        <format type="color" field="Job RT Schedule">
          <colorPalette type="map">{"0":#DC4E41,"1":#53A051}</colorPalette>
        </format>
        <format type="color" field="Job Schedule Priority">
          <colorPalette type="map">{"higher":#F8BE34,"highest":#DC4E41}</colorPalette>
        </format>
      </table>
      <single>
        <title>Total Number of Jobs</title>
        <search>
          <query>| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
| search is_scheduled=1 disabled=0 author IN ( $tok_user$ ) app IN ( $tok_app$ ) shcluster_label="$shcluster_label$" NOT (earliest_time=rt* OR latest_time=rt* OR summary_index=1 OR savedsearch_search=*timechart* OR savedsearch_search=*bin* OR savedsearch_search=*span* OR savedsearch_search=*bucket* ) 
| eval fudge_author = case (
    'sharing' == "user", 'author',
    'sharing' == "global", "nobody",
    'sharing' == "app", "nobody") 
| search `gmc_comment("MACRO TO BREAK DOWN THE CRON SCHEDULE INTO ATOMS, EMITS THOSE, nth_minute, AND THE CURRENTLY IDENTIFIED CATEGORY IF ANY")` 
| `gmc_categorize_cron_schedule(cron_schedule)` 
| search category="$tok_cron_cat$" 
| eval schedule_interval=case(
    category="every minute", 60,
    searchmatch("category=\"every * minutes\""), nth_minute*60,
    category="hourly", 3600,
    category="daily", 86400
    ) 
| search `gmc_comment("LOOKUP TO GET new_category FROM category, AND reset_count")` 
| lookup cron_schedule_category_remapper_lookup category 
| eval new_schedule_interval=case(
    new_category="every minute", 60,
    searchmatch("new_category=\"every * minutes\""), new_nth_minute*60,
    new_category="hourly", 3600,
    new_category="daily", 86400
    ) 
| eval keeper=if(searchmatch("new_category=daily minute=0") OR searchmatch("new_category=hourly minute=0") OR new_category="every 5 minutes" OR new_category="every 10 minutes" OR new_category="every 30 minutes" OR new_category="every 15 minutes", 1, 0) 
| $keeper$ 
| sort cron_schedule 
| eval min_slots="0 1 2 3 4 6 7 8 9 11 12 13 14 16 17 18 19 21 22 23 24 26 27 28 29" 
| makemv min_slots 
| streamstats count reset_after="count=reset_count" by new_category 
| eval upper_bound=59 
| eval output_count=mvindex(min_slots, count) 
| eval new_cron=case(
    searchmatch("new_category=daily minute=0"), output_count . " ". hour . " " . domonth . " " . month . " " . doweek,
    searchmatch("new_category=daily minute!=0"), cron_schedule,
    searchmatch("new_category=hourly minute=0"), output_count . " ". hour . " " . domonth . " " . month . " " . doweek,
    searchmatch("new_category=hourly minute!=0"), cron_schedule,
    new_category="every 5 minutes" OR new_category="every 10 minutes" OR new_category="every 30 minutes" OR new_category="every 15 minutes", output_count . "-59/" . new_nth_minute . " " . hour . " " . domonth . " " . month . " " . doweek
    ) 
| rex mode=sed field=new_cron "s/x/*/g" 
| eval encoded_title=savedsearch_name 
| eval base_hour=if(hour="x", "14", hour) 
| eval base_minute=if(searchmatch("category=\"every * minutes\""), nth_minute, minute) 
| eval basetime=strptime("2020-07-14 " . printf("%01d", base_hour) . " " . printf("%01d", base_minute), "%F %H %M") 
| eval seconds_searched=round(relative_time(basetime, dispatch_latest_time)-relative_time(basetime, dispatch_earliest_time)) 
| eval seconds_gap=if(schedule_interval&gt;seconds_searched, schedule_interval-seconds_searched, null() ) 
| rex field=encoded_title mode=sed
    "s:%:%25:g s:\+:%2B:g s:\":%22:g s:\(:%28:g s:\):%29:g s: :%20:g  s:&lt;:%3C:g  s:&gt;:%3E:g  s:#:%23:g  s:{:%7B:g  s:}:%7D:g  s:\|:%7C:g s:\\\:%5C:g  s:\^:%5E:g  s:~:%7E:g
     s:\[:%5B:g  s:\]:%5D:g  s:\`:%60:g  s:;:%3B:g  s:/:%2F:g  s:\?:%3F:g  s/:/%3A/g  s:@:%40:g  s:=:%3D:g  s:&amp;:%26:g  s:\$:%24:g  s:\!:%21:g  s:\*:%2A:g" 
| eval change_script="curl -k -u $account$:$password$ -XPOST https://$stack$:8089/servicesNS/" + fudge_author + "/" + 'app' + "/saved/searches/" + encoded_title + " -d " + "cron_schedule=\"" + new_cron + "\" || true" 
| eval rollback_script="curl -k -u $account$:$password$ -XPOST https://$stack$:8089/servicesNS/" + fudge_author + "/" + 'app' + "/saved/searches/" + encoded_title + " -d " + "cron_schedule=\"" + cron_schedule + "\" || true" 
| table shcluster_label app sharing author savedsearch_name cron_schedule category allow_skew schedule_window schedule_priority realtime_schedule dispatch_earliest_time dispatch_latest_time schedule_interval seconds_searched seconds_gap new_cron new_category new_schedule_interval change_script rollback_script reset_count output_count description 
| stats count</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="colorMode">block</option>
        <option name="drilldown">none</option>
        <option name="height">50</option>
        <option name="rangeColors">["0x53a051","0x53a051"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="useColors">1</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <title>Current cron schedule categories</title>
      <chart>
        <search>
          <query>| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
| search app IN ( $tok_app$ ) author IN ( $tok_user$ ) shcluster_label="$shcluster_label$" NOT (earliest_time=rt* OR latest_time=rt* OR summary_index=1 OR savedsearch_search=*timechart* OR savedsearch_search=*bin* OR savedsearch_search=*span* OR savedsearch_search=*bucket* ) 
| search is_scheduled=1 disabled=0 
| `gmc_categorize_cron_schedule(cron_schedule)` 
| stats count BY category 
| sort count desc</query>
          <earliest>-30m@m</earliest>
          <latest>now</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.backgroundColor">FFFF31</option>
        <option name="charting.chart">pie</option>
        <option name="charting.chart.showPercent">1</option>
        <option name="charting.chart.sliceCollapsingThreshold">0</option>
        <option name="height">500</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <title>Proposed new categories</title>
      <chart>
        <search>
          <query>| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
| search app IN ( $tok_app$ ) author IN ( $tok_user$ ) shcluster_label="$shcluster_label$" NOT (earliest_time=rt* OR latest_time=rt* OR summary_index=1 OR savedsearch_search=*timechart* OR savedsearch_search=*bin* OR savedsearch_search=*span* OR savedsearch_search=*bucket* ) 
| search is_scheduled=1 disabled=0 
| `gmc_categorize_cron_schedule(cron_schedule)` 
| lookup cron_schedule_category_remapper_lookup category 
| fillnull value="uncategorized" new_category 
| chart count BY new_category 
| sort count desc</query>
          <earliest>-30m@m</earliest>
          <latest>now</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.backgroundColor">FFFF31</option>
        <option name="charting.chart">pie</option>
        <option name="charting.chart.sliceCollapsingThreshold">0</option>
        <option name="charting.chart.showPercent">true</option>
        <option name="height">500</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Current cron Schedule 5 minute schedules hard coded for now</title>
      <chart>
        <search>
          <query>| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
| search is_scheduled=1 disabled=0 author IN ( $tok_user$ ) app IN ( $tok_app$ ) shcluster_label="$shcluster_label$" NOT (earliest_time=rt* OR latest_time=rt* OR summary_index=1 OR savedsearch_search=*timechart* OR savedsearch_search=*bin* OR savedsearch_search=*span* OR savedsearch_search=*bucket* ) 
| eval fudge_author = case (
    'sharing' == "user", 'author',
    'sharing' == "global", "nobody",
    'sharing' == "app", "nobody") 
| search `gmc_comment("MACRO TO BREAK DOWN THE CRON SCHEDULE INTO ATOMS, EMITS THOSE, nth_minute, AND THE CURRENTLY IDENTIFIED CATEGORY IF ANY")` 
| `gmc_categorize_cron_schedule(cron_schedule)` 
| search category="$tok_cron_cat$" 
| eval schedule_interval=case(
    category="every minute", 60,
    searchmatch("category=\"every * minutes\""), nth_minute*60,
    category="hourly", 3600,
    category="daily", 86400
    ) 
| search `gmc_comment("LOOKUP TO GET new_category FROM category, AND reset_count")` 
| lookup cron_schedule_category_remapper_lookup category 
| eval new_schedule_interval=case(
    new_category="every minute", 60,
    searchmatch("new_category=\"every * minutes\""), new_nth_minute*60,
    new_category="hourly", 3600,
    new_category="daily", 86400
    ) 
| eval keeper=if(searchmatch("new_category=daily minute=0") OR searchmatch("new_category=hourly minute=0") OR new_category="every 5 minutes" OR new_category="every 10 minutes" OR new_category="every 30 minutes" OR new_category="every 15 minutes", 1, 0) 
| $keeper$ 
| sort cron_schedule 
| eval min_slots="0 1 2 3 4 6 7 8 9 11 12 13 14 16 17 18 19 21 22 23 24 26 27 28 29" 
| makemv min_slots 
| streamstats count reset_after="count=reset_count" by new_category 
| eval upper_bound=59 
| eval output_count=mvindex(min_slots, count) 
| eval new_cron=case(
    searchmatch("new_category=daily minute=0"), output_count . " ". hour . " " . domonth . " " . month . " " . doweek,
    searchmatch("new_category=daily minute!=0"), cron_schedule,
    searchmatch("new_category=hourly minute=0"), output_count . " ". hour . " " . domonth . " " . month . " " . doweek,
    searchmatch("new_category=hourly minute!=0"), cron_schedule,
    new_category="every 5 minutes" OR new_category="every 10 minutes" OR new_category="every 30 minutes" OR new_category="every 15 minutes", output_count . "-59/" . new_nth_minute . " " . hour . " " . domonth . " " . month . " " . doweek
    ) 
| rex mode=sed field=new_cron "s/x/*/g" 
| eval encoded_title=savedsearch_name 
| eval base_hour=if(hour="x", "14", hour) 
| eval base_minute=if(searchmatch("category=\"every * minutes\""), nth_minute, minute) 
| eval basetime=strptime("2020-07-14 " . printf("%01d", base_hour) . " " . printf("%01d", base_minute), "%F %H %M") 
| eval seconds_searched=round(relative_time(basetime, dispatch_latest_time)-relative_time(basetime, dispatch_earliest_time)) 
| eval seconds_gap=if(schedule_interval&gt;seconds_searched, schedule_interval-seconds_searched, null() ) 
| rex field=encoded_title mode=sed
    "s:%:%25:g s:\+:%2B:g s:\":%22:g s:\(:%28:g s:\):%29:g s: :%20:g  s:&lt;:%3C:g  s:&gt;:%3E:g  s:#:%23:g  s:{:%7B:g  s:}:%7D:g  s:\|:%7C:g s:\\\:%5C:g  s:\^:%5E:g  s:~:%7E:g
     s:\[:%5B:g  s:\]:%5D:g  s:\`:%60:g  s:;:%3B:g  s:/:%2F:g  s:\?:%3F:g  s/:/%3A/g  s:@:%40:g  s:=:%3D:g  s:&amp;:%26:g  s:\$:%24:g  s:\!:%21:g  s:\*:%2A:g" 
| eval change_script="curl -k -u $account$:$password$ -XPOST \"https://$stack$:8089/servicesNS/" + fudge_author + "/" + 'app' + "/saved/searches/" + encoded_title + "\"" + " -d " + "cron_schedule=\"" + new_cron + "\" || true" 
| eval rollback_script="curl -k -u $account$:$password$ -XPOST \"https://$stack$:8089/servicesNS/" + fudge_author + "/" + 'app' + "/saved/searches/" + encoded_title + "\"" + " -d " + "cron_schedule=\"" + cron_schedule + "\" || true" 
| `cron_descriptor(cron_schedule)` 
| stats count by cron_schedule_described</query>
          <earliest>-30m@m</earliest>
          <latest>now</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.backgroundColor">FFFF31</option>
        <option name="charting.chart">pie</option>
        <option name="charting.chart.showPercent">1</option>
        <option name="charting.chart.sliceCollapsingThreshold">0</option>
        <option name="height">500</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <html>
                <hr style="height:5px;color:#FFFF31;background-color:#FFFF31"/>
            </html>
    </panel>
  </row>
</form>