<form theme="dark">
  <label>Splunk - SH - 06 - SHC Skipped and Deferred Search Analysis - Dashboard - v1</label>
  <search id="captainSnapshotSearch">
    <query>
      | from lookup:splunk_rest_assets_kv_store_lookup 
| where Splunk_Roles="shc_captain"
| fields Splunk_Instance
    </query>
    <finalized>
      <set token="captain_name">$result.label$</set>
    </finalized>
  </search>
  <search id="Help">
    <query>
      | from lookup:splunk_gmc_kb_csv_lookup| fields Index Component Datatype Default Sub_Component Field_Name Field_Display_Name Field_Description 
    </query>
    <finalized>
      <set token="captain_name">$result.label$</set>
    </finalized>
  </search>
  <row>
    <panel>
     <html>
       
       <p><strong>What does the scheduler do?</strong></p>
<ul>
<li>When a Report or Alert is scheduled the scheduler manages it if and when that Report/Alert runs.</li>
<li>In a SHC the scheduler runs on the SHC captain node and delegates which member runs the scheduled search. The captain reports in scheduler.log when a search is skipped/deferred.</li>
<li>The scheduler enforces concurrency limits/quotas</li>
<li>The scheduler has prioritization/scoring rules applied to scheduled searches</li>
</ul>
     </html>
    </panel>
  </row>
  <fieldset submitButton="false" autoRun="true">
    <input type="time" token="time" searchWhenChanged="true">
      <label>Time Range</label>
      <default>
        <earliest>-60m@m</earliest>
        <latest>now</latest>
      </default>
    </input>
    <input type="dropdown" searchWhenChanged="true" token="shcluster_label">
      <label>Search Head Cluster:</label>
      <showClearButton>false</showClearButton>
      <selectFirstChoice>true</selectFirstChoice>
      <fieldForLabel>shcluster_label</fieldForLabel>
      <fieldForValue>shcluster_label</fieldForValue>
      <default>None</default>
      <initialValue>None</initialValue>
      <choice value="None">None</choice>
      <search>
        <query>| from lookup:splunk_rest_shcluster_config_shc_kv_store_lookup
`gmc_comment(| where isnotnull(replication_port) AND replication_port!="")`
| stats count by shcluster_label
| fields - count</query>
      </search>
    </input>
    <input type="dropdown" token="filter" searchWhenChanged="true">
      <label>filter</label>
      <choice value="!=*ACCELERATE*">exclude accelerations</choice>
      <choice value="=*">show all</choice>
      <prefix>savedsearch_name</prefix>
      <default>!=*ACCELERATE*</default>
      <initialValue>!=*ACCELERATE*</initialValue>
    </input>
  </fieldset>
  <row>
    <panel>
      <title>Panel1</title>
      <table>
        <search base="Help">
          <query>| where Index="_internal" 
| search  Field_Name IN (concurrency_*,reason,skipped_count,status,priority,window_time)
| table  Field_Name  Field_Description</query>
        </search>
        <option name="count">1</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
        <option name="wrap">true</option>
        <format type="color" field="Field_Name">
          <colorPalette type="sharedList"></colorPalette>
          <scale type="sharedCategory"></scale>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>I. Are searches being skipped or deferred?</h1>
      </html>
      <table>
        <search>
          <query>index=_internal source=*scheduler.log $filter$ status=* (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| chart count sparkline(count, 1m) as trend by status 
| sort -count</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <!-- Set span for each sparkline datapoint to be 1 m -->
        <!-- Set sparkline options here; make sure that field matches field name of the search results -->
        <option name="count">5</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">cell</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
        <option name="wrap">true</option>
        <format field="trend" type="sparkline">
          <option name="type">bar</option>
          <option name="height">30px</option>
          <option name="colorMap">
            <option name="2000:">#5379AF</option>
            <option name=":1999">#9ac23c</option>
          </option>
          <option name="barWidth">7px</option>
        </format>
        <drilldown>
          <set token="s1">$row.&lt;fieldname&gt;$</set>
        </drilldown>
      </table>
      <html>
        <h1>Click on any row above to see more details.</h1>
       
      </html>
    </panel>
  </row>
  <row>
    <panel depends="$s1$">
      <chart>
        <title>search status timeline</title>
        <search>
          <query>index=_internal source=*scheduler.log $filter$ status=* (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| timechart count by status</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.abbreviation">none</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.abbreviation">none</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.abbreviation">none</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">gaps</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.layout.splitSeries">1</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">standard</option>
        <option name="charting.legend.placement">right</option>
        <option name="charting.lineWidth">2</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
        <drilldown>
          <set token="s1a">$row.&lt;fieldname&gt;$</set>
        </drilldown>
      </chart>
    </panel>
  </row>
  <row>
    <panel depends="$s1$">
      <html>
    <a data-unset-token="s1">Collapse</a>
  </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>II. Why are searches being skipped or deferred</h1>
      </html>
      <table>
        <search>
          <query>index=_internal source=*scheduler.log status=skipped OR status=continued OR status=deferred $filter$ (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| chart count sparkline(count, 1m) as trend by reason 
| sort -count</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <!-- Set span for each sparkline datapoint to be 1 hour -->
        <!-- Set sparkline options here; make sure that field matches field name of the search results -->
        <option name="count">5</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">cell</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
        <option name="wrap">true</option>
        <format field="trend" type="sparkline">
          <option name="type">bar</option>
          <option name="height">40px</option>
          <option name="colorMap">
            <option name="2000:">#C33D48</option>
            <option name=":1999">#C33D48</option>
          </option>
          <option name="barWidth">7px</option>
        </format>
        <drilldown>
          <set token="s2">$row.&lt;fieldname&gt;$</set>
        </drilldown>
      </table>
    </panel>
  </row>
  <row>
    <panel depends="$s2$">
      <html>
    <a data-unset-token="s2">Close this panel</a>
  </html>
      <chart>
        <search>
          <query>index=_internal source=*scheduler.log status=skipped OR status=continued OR status=deferred $filter$ (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| timechart count by reason</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.abbreviation">none</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.abbreviation">none</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.abbreviation">none</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">gaps</option>
        <option name="charting.chart.showDataLabels">minmax</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.layout.splitSeries">1</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">standard</option>
        <option name="charting.legend.placement">right</option>
        <option name="charting.lineWidth">2</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
        <drilldown>
          <set token="r1">$click.name2$</set>
        </drilldown>
      </chart>
    </panel>
    <panel depends="$r1$">
      <html>
    <a data-unset-token="r1">Close this panel</a>
  </html>
      <chart>
        <title>$r1$</title>
        <search>
          <query>index=_internal source=*scheduler.log status=skipped OR status=continued OR status=deferred $filter$ reason="$r1$" (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| timechart count by savedsearch_name limit=0</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.abbreviation">none</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.abbreviation">none</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.abbreviation">none</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">gaps</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">standard</option>
        <option name="charting.legend.placement">right</option>
        <option name="charting.lineWidth">2</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
        <drilldown>
          <set token="r2">$click.name2$</set>
        </drilldown>
      </chart>
    </panel>
  </row>
  <row>
    <panel depends="$r2$">
      <html>
    <a data-unset-token="r2">Close this panel</a>
  </html>
      <table>
        <title>runtime vs cron schedule (how long does it take to run this search vs how often are we running it) SEARCH: $r2$</title>
        <search>
          <query>| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup | where shcluster_label="$shcluster_label$" AND is_scheduled=1 AND disabled=0 
| stats count by title next_scheduled_time cron_schedule schedule_priority schedule_window dispatch.earliest_time dispatch.latest_time 
| fields savedsearch_name next_scheduled_time cron_schedule schedule_priority schedule_window dispatch.earliest_time dispatch.latest_time 
| search savedsearch_name="$r2$" 
| join savedsearch_name 
    [ search index=_internal source=*scheduler.log* status=skipped OR status=continued OR status=deferred reason=* savedsearch_name="$r2$" (`gmc_setup_search_head_search` OR host=sh-i-*)  
    | `get_shcluster_label(host)` 
    | where shcluster_label="$shcluster_label$" ] 
| join savedsearch_name 
    [ search index=_internal sourcetype=scheduler status=* savedsearch_name="$r2$" dispatch_time=* (`gmc_setup_search_head_search` OR host=sh-i-*)  
    | `get_shcluster_label(host)` 
    | where shcluster_label="$shcluster_label$" 
    | eval runtime_delay= (dispatch_time-scheduled_time) 
    | stats avg(runtime_delay) as avg_runtime_delay avg(run_time) as avg_runtime max(run_time) as max_runtime by savedsearch_name 
    | eval avg_runtime_delay=round(avg_runtime_delay,0) 
    | eval avg_runtime=round(avg_runtime,0) 
    | eval max_runtime=round(max_runtime,0) 
    | rename avg_runtime_delay as "avg_runtime_delay(sec)" avg_runtime as avg_runtime(sec) max_runtime as max_runtime(sec) 
    | sort - "max_runtime(sec)"] 
| table savedsearch_name status reason avg_runtime(sec) max_runtime(sec) cron_schedule 
| sort -max_runtime(sec)</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">5</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">cell</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
        <drilldown>
          <set token="cron">$click.value6$</set>
        </drilldown>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>III. Which searches are being skipped or deferred</h1>
      </html>
      <table>
        <search>
          <query>index=_internal source=*scheduler.log status=skipped OR status=continued OR status=deferred $filter$ (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| chart count sparkline(count, 1m) as trend by savedsearch_name 
| sort -count</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
        </search>
        <!-- Set span for each sparkline datapoint to be 1 hour -->
        <!-- Set sparkline options here; make sure that field matches field name of the search results -->
        <option name="count">5</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">cell</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="wrap">true</option>
        <format field="trend" type="sparkline">
          <option name="type">bar</option>
          <option name="height">40px</option>
          <option name="colorMap">
            <option name="3000:">#FE9A2E</option>
            <option name=":3001">#C33D48</option>
          </option>
          <option name="barWidth">7px</option>
        </format>
        <drilldown>
          <set token="s3">$click.value$</set>
        </drilldown>
      </table>
    </panel>
  </row>
  <row>
    <panel depends="$s3$">
      <chart>
        <title>reasons $s3$ has been skipped or deferred</title>
        <search>
          <query>index=_internal source=*scheduler.log status=skipped OR status=continued OR status=deferred savedsearch_name=$s3$ $filter$ (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| timechart count by reason limit=0</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.abbreviation">none</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.abbreviation">none</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.abbreviation">none</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">gaps</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">stacked</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">standard</option>
        <option name="charting.legend.placement">right</option>
        <option name="charting.lineWidth">2</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel depends="$s3$">
      <chart>
        <title>$s3$ has been skipped or deferred for the following scheduled times</title>
        <search>
          <query>index=_internal source=*scheduler.log* $filter$ savedsearch_name="$s3$" (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| eval delay=(dispatch_time-scheduled_time) 
| join savedsearch_name 
    [ search index=_internal source=*scheduler.log* status=skipped $filter$ savedsearch_name="$s3$" (`gmc_setup_search_head_search` OR host=sh-i-*)  
    | `get_shcluster_label(host)` 
    | where shcluster_label="$shcluster_label$" 
    | dedup savedsearch_name 
    | table savedsearch_name] 
| stats count by savedsearch_name scheduled_time status 
| stats list(status) as status list(count) as count by savedsearch_name scheduled_time 
| sort +scheduled_time 
| search status!=completed 
| search status!=success 
| eval _time=scheduled_time 
| timechart span=1m count by status</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.text">scheduled_time</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.abbreviation">none</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.abbreviation">none</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.abbreviation">none</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">gaps</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">standard</option>
        <option name="charting.legend.placement">right</option>
        <option name="charting.lineWidth">2</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel depends="$s3$">
      <title>$s3$ has been  skipped or deferred past its scheduled_time for the scheduled times listed below.</title>
      <table>
        <title>$s3$</title>
        <search>
          <query>index=_internal source=*scheduler.log* $filter$ savedsearch_name="$s3$" (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| eval delay=(dispatch_time-scheduled_time) 
| convert ctime(scheduled_time) as scheduled_time 
| convert ctime(dispatch_time) as dispatch_time 
| join savedsearch_name 
    [ search index=_internal source=*scheduler.log* status=skipped $filter$ savedsearch_name="$s3$" (`gmc_setup_search_head_search` OR host=sh-i-*)  
    | `get_shcluster_label(host)` 
    | where shcluster_label="$shcluster_label$" 
    | dedup savedsearch_name 
    | table savedsearch_name] 
| stats count by savedsearch_name scheduled_time status 
| stats list(status) as status list(count) as count by savedsearch_name scheduled_time 
| sort +scheduled_time 
| search status!=completed 
| search status!=success 
| stats list(scheduled_time) by savedsearch_name status 
| rename list(scheduled_time) as "scheduled time for which search was skipped" 
| eval scheduler_action = case(status == "skipped", "scheduler will not attempt to re-run these searches for the scheduled_time",status == "delayed", "scheduler will retry to run the search up until the next scheduled_time",status == "deferred", "scheduler will attempt to re-run these searches for their scheduled_time at a future point in time") 
| table savedsearch_name status scheduler_action "scheduled time for which search was skipped"</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">100</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
      </table>
    </panel>
    <panel depends="$s3$">
      <title>status by scheduled_time for the last $time.earliest$</title>
      <table>
        <title>$s3$</title>
        <search>
          <query>index=_internal source=*scheduler.log* $filter$ savedsearch_name="$s3$" (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| eval delay=(dispatch_time-scheduled_time) 
| convert ctime(scheduled_time) as scheduled_time 
| convert ctime(dispatch_time) as dispatch_time 
| join savedsearch_name 
    [ search index=_internal source=*scheduler.log* status=skipped OR status=deferred OR status=continued $filter$ savedsearch_name="$s3$" (`gmc_setup_search_head_search` OR host=sh-i-*)  
    | `get_shcluster_label(host)` 
    | where shcluster_label="$shcluster_label$" 
    | dedup savedsearch_name 
    | table savedsearch_name] 
| stats count by savedsearch_name scheduled_time status 
| stats list(status) as status list(count) as count by savedsearch_name scheduled_time 
| sort +scheduled_time</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">5</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
      </table>
    </panel>
  </row>
  <row>
    <panel depends="$s3$">
      <title>audit log for completed run times for $s3$</title>
      <table>
        <search>
          <query>index=_audit source=*audittrail* action=search info=completed $filter$ savedsearch_name="$s3$" search_id!=*rsa_* (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| convert ctime(exec_time) as exec_time ctime(api_et) as api_et ctime(api_lt) as api_lt ctime(search_et) as search_et ctime(search_lt) as search_lt 
| dedup savedsearch_name search_id 
| table host savedsearch_name search_id total_run_time exec_time search_et search_lt result_count 
| sort +exec_time 
| fillnull search_lt value="now"</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">5</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
      </table>
    </panel>
  </row>
  <row>
    <panel depends="$s3$">
      <title>Latency for completed run times for : $s3$</title>
      <table>
        <title>Latency is the difference between scheduled and dispatch time</title>
        <search>
          <query>index=_internal sourcetype=scheduler status="completed" $filter$ savedsearch_name="$s3$" (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| eval window_time = if(isnotnull(window_time), window_time, 0) 
| eval execution_latency = max(dispatch_time - (scheduled_time + window_time), 0) 
| stats max(execution_latency) as "latency seconds" by scheduled_time dispatch_time 
| convert ctime(scheduled_time) as scheduled_time ctime(dispatch_time) as dispatch_time</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">5</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
      </table>
    </panel>
  </row>
  <row>
    <panel depends="$s3$">
      <title>Latency timechart for $s3$</title>
      <chart>
        <search>
          <query>index=_internal sourcetype=scheduler status="completed" $filter$ savedsearch_name="$s3$" (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| eval window_time = if(isnotnull(window_time), window_time, 0) 
| eval execution_latency = max(dispatch_time - (scheduled_time + window_time), 0) 
| eval _time=scheduled_time 
| timechart span=1m max(execution_latency) as "latency seconds"</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.text">scheduled_time</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.abbreviation">none</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.abbreviation">none</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.abbreviation">none</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">standard</option>
        <option name="charting.legend.placement">right</option>
        <option name="charting.lineWidth">2</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
      </chart>
      <html>
    <a data-unset-token="s3">Collapse</a>
  </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
        <h1>IV.  Overall Impact of unique searches in the last:</h1>
      </html>
      <table>
        <title>$time.earliest$</title>
        <search>
          <query>index=_internal source=*scheduler.log* $filter$ savedsearch_name=* (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| eval delay=(dispatch_time-scheduled_time) 
| convert ctime(scheduled_time) as scheduled_time 
| convert ctime(dispatch_time) as dispatch_time 
| join savedsearch_name 
    [ search index=_internal source=*scheduler.log* $filter$ status=skipped OR status=continued OR status=deferred savedsearch_name=* (`gmc_setup_search_head_search` OR host=sh-i-*)  
    | `get_shcluster_label(host)` 
    | where shcluster_label="$shcluster_label$" 
    | dedup savedsearch_name 
    | table savedsearch_name] 
| stats count by savedsearch_name scheduled_time status 
| stats list(status) as status list(count) as count by savedsearch_name scheduled_time 
| sort +scheduled_time 
| search status!=completed 
| search status!=success 
| dedup savedsearch_name 
| stats dc(savedsearch_name) as "unique searches impacted" by status</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">100</option>
        <option name="dataOverlayMode">heatmap</option>
        <option name="drilldown">cell</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
        <drilldown>
          <set token="s4">$click.value$</set>
        </drilldown>
      </table>
      <html>
        <h1>Click on status to see impacted searches and for which scheduled_time</h1>
       
      </html>
    </panel>
  </row>
  <row>
    <panel depends="$s4$">
      <chart>
        <title>searches  $s4$ past their scheduled_time</title>
        <search>
          <query>index=_internal source=*scheduler.log* $filter$ (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| join savedsearch_name 
    [ search index=_internal source=*scheduler.log* $filter$ status=$s4$ (`gmc_setup_search_head_search` OR host=sh-i-*)  
    | `get_shcluster_label(host)` 
    | where shcluster_label="$shcluster_label$" 
    | dedup savedsearch_name 
    | table savedsearch_name] 
| stats count by savedsearch_name scheduled_time status 
| stats list(status) as status list(count) as count by savedsearch_name scheduled_time 
| sort +scheduled_time 
| search status!=completed 
| search status!=success 
| eval _time=scheduled_time 
| timechart count by status</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisTitleX.text">scheduled_time</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.abbreviation">none</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.abbreviation">none</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.abbreviation">none</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">area</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">gaps</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.layout.splitSeries">1</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.mode">standard</option>
        <option name="charting.legend.placement">right</option>
        <option name="charting.lineWidth">2</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel depends="$s4$">
      <title>Scheduled searches that have been $s4$ for their scheduled time listed below.</title>
      <table>
        <search>
          <query>index=_internal source=*scheduler.log* savedsearch_name=* $filter$ (`gmc_setup_search_head_search` OR host=sh-i-*)  
| `get_shcluster_label(host)` 
| where shcluster_label="$shcluster_label$" 
| eval delay=(dispatch_time-scheduled_time) 
| convert ctime(scheduled_time) as scheduled_time 
| convert ctime(dispatch_time) as dispatch_time 
| join savedsearch_name 
    [ search index=_internal source=*scheduler.log* status=$s4$ savedsearch_name=* $filter$ (`gmc_setup_search_head_search` OR host=sh-i-*)  
    | `get_shcluster_label(host)` 
    | where shcluster_label="$shcluster_label$" 
    | dedup savedsearch_name 
    | table savedsearch_name] 
| stats count by savedsearch_name scheduled_time status 
| stats list(status) as status list(count) as count by savedsearch_name scheduled_time 
| sort +scheduled_time 
| search status!=completed 
| search status!=success 
| stats list(scheduled_time) by savedsearch_name status 
| rename list(scheduled_time) as "scheduled time for which search was $s4$" 
| eval scheduler_action = case(status == "skipped", "scheduler will not attempt to re-run these searches for the scheduled_time",status == "delayed", "scheduler will retry to run the search up until the next scheduled_time",status == "deferred", "scheduler will attempt to re-run these searches for their scheduled_time at a future point in time") 
| table savedsearch_name status scheduler_action "scheduled time for which search was $s4$"</query>
          <earliest>$time.earliest$</earliest>
          <latest>$time.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">10</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">true</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
      </table>
      <html>
    <a data-unset-token="s4">Collapse</a>
  </html>
    </panel>
  </row>
  <row>
    <panel>
      <html>
                 <style>.btn-primary { margin: 5px 10px 5px 0; }</style>
                 <a target="_blank" href="shc_scheduler_analysis_detailed" class="btn btn-primary">continue investigation by looking at SHC status and configurations </a>
             </html>
    </panel>
  </row>

</form>