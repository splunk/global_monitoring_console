app,view,panel,classification,text,app_version,disabled
GMC-079,Find Top 20 most used Dashboards on the SHC by App & Dashboard Name,"Adoption,Usage",Dashboards,,"index=`gmc_setup_summary_index` search_name=splunk_internal_web_access_idx_summary_tracker 
| fields _time User Splunk_Instance App OS_Name avg_spent Dashboard_Name Latest_Access 
| `get_shcluster_label(Splunk_Instance)` 
| `get_dashboards_info(shcluster_label,App,Dashboard_Name)` 
| `get_identity_info(author)` 
| search shcluster_label=""libertymutual-shc"" NOT Dashboard_Name IN (welcome*,overview) NOT App IN (dmc) 
| stats
    dc(User) As Num_Users count as num_hits latest(label) As Dashboard_Display_Name latest(author) As Owner latest(emp_name) As emp_name by App Dashboard_Name 
| sort 0 - num_hits 
| head 20 
| table Dashboard_Name Dashboard_Display_Name App Owner emp_name num_hits Num_Users",0
GMC-081,Reports Looking back over 90 Days - Scheduled,"PCF,GT90Days",Scheduled_Jobs,,"| tstats SUMMARIESONLY=TRUE ALLOW_OLD_SUMMARIES=FALSE
    `tstats_gmc_audit`
    FROM DATAMODEL=GMC
    WHERE nodename=Search_Activity.Audit_Search
    index=_audit
    AND Search_Activity.Audit_Search.search_type1 = ""scheduled""
    AND Search_Activity.Audit_Search.info1 = ""*""
    AND Search_Activity.Audit_Search.user1 = ""*""
    AND Search_Activity.Audit_Search.savedsearch_name1 = ""*""
    AND host = ""*""
    NOT Search_Activity.Audit_Search.savedsearch_name1 IN (""*global_monitoring_console*"", ""splunk_*_dashboard*"", ""splunk_*_*_lookup_*"", ""splunk_*_*_audit_search_activity_*"")
    BY _time Search_Activity.Audit_Search.search_id1 Search_Activity.Audit_Search.info1 
| `gmc_drop_dm_object_name(Search_Activity.Audit_Search)` 
| rename info1 AS info, search_id1 As search_id 
| fields _time host available_count considered_events datamodel decompressed_slices event_count dispatch_time exec_time info result_count roles savedsearch_name scan_count search search_et search_id search_lt search_startup_time search_type searched_buckets total_run_time total_slices user 
| eval Time_Diff=round((search_lt-search_et)/60/60/24,0) 
| where Time_Diff>=90 
| `gmc_convert_runtime('total_run_time')` 
| `get_normalized_search_id(search_id)` 
| `get_lookup_reference(search)` 
| `get_macro_reference(search)` 
| `get_datamodel_reference(search)` 
| `get_index_reference(search)` 
| `get_sourcetype_reference(search)` 
| `get_source_reference(search)` 
| `get_eventtype_reference(search)` 
| `get_rest_reference(search)` 
| `get_instance_info(host)` 
| `get_shcluster_label(host)` 
| `get_identity_info(user)` 
| `fillnull_identity_info` 
| `get_saved_searches_info(shcluster_label,savedsearch_name)` 
| `cron_descriptor(cron_schedule)` 
| eval search_et=if(search_et=""0"", ""All-Time"", search_et) 
| fillnull value=""no-search_id"" search_id_normalized 
| fillnull value=0 available_count considered_events decompressed_slices event_count result_count scan_count searched_buckets total_run_time total_slices 
| fillnull value=""Undefined"" shcluster_label datamodel savedsearch_type search cron_schedule_described service_title kpi_title auth_type 
| fillnull value=""Undefined"" 
| search shcluster_label=""libertymutual-shc"" search_id_normalized=""***"" datamodel=""*"" search=""*pcf**"" total_run_time>-1 searched_buckets>-1 Splunk_Roles=""*"" Lookup_Reference=""***"" savedsearch_type=""*"" Macro_Reference=""***"" Datamodel_Reference=""***"" Index_Reference=""***"" Sourcetype_Reference=""***"" Source_Reference=""***"" Eventtype_Reference=""***"" Rest_Reference=""***"" cron_schedule_described=""*"" service_title=""*"" kpi_title=""*"" emp_name=""*"" emp_title=""*"" emp_type=""*"" emp_status=""*"" emp_dep=""*"" emp_lob1=""*"" emp_cc=""*"" emp_city=""*"" emp_region1=""*"" emp_country=""*"" auth_type=""*"" result_count<999999999 search_lt=""*"" search_et=""*"" 
| fields  shcluster_label  app  savedsearch_name savedsearch_type service_title kpi_title dispatch_time total_run_time 'total_run_time' _time search_et search_lt Time_Diff user emp_name emp_email emp_first emp_last emp_dep emp_lob1 emp_title emp_city emp_region1 emp_country datamodel scan_count event_count result_count available_count considered_events searched_buckets total_slices decompressed_slices cron_schedule cron_schedule_described schedule_priority max_concurrent schedule_window allow_skew search 
| `normalize_search_status` 
| `normalize_search_type(search_type)` 
| eval search_lt = strftime(search_lt, ""%A %B %d, %Y %I:%M:%S %p %Z"") 
| eval search_et = strftime(search_et, ""%A %B %d, %Y %I:%M:%S %p %Z"")
| bin _time span=1d 
| stats count values(*) as * values(_time) as Time by shcluster_label  app savedsearch_name
| eval Time = strftime(Time, ""%A %B %d, %Y %I:%M:%S %p %Z"")
| fields count shcluster_label  app  savedsearch_name Time search_et search_lt Time_Diff cron_schedule user emp_email emp_dep emp_title search",0
GMC-082,PCF Index Queries From Dashboards or Views possibly over 90 days,"PCF,GT90Days",Dashboards,,"| from lookup:splunk_rest_data_ui_views_sh_kv_store_lookup
| fields _time,shcluster_label,Splunk_Instance,Splunk_Roles,app,sharing,title,label,description,type,dashboard_size,author,location,updated,time_range,Report_Reference,Dashboard_Reference,Lookup_Reference,Datamodel_Reference,Macro_Reference,Index_Reference,Sourcetype_Reference,Source_Reference,Eventtype_Reference,Rest_Reference,search,BaseSearch,acl_perms_read,acl_perms_write,panel_title,num_panels,auto_refresh_delay,submitButton,autoRun 
| search NOT app IN (splunk_monitoring_console, splunk_archiver, simple_xml_examples, *global_monitoring_console,gmc*) NOT title IN (setup,home,about,settings,contents,help) 
| eval url=""http://"" . shcluster_label . "":8000/en-US/app/"" . app . ""/"" . title 
| `get_instance_roles(Splunk_Instance)` 
| `get_dashboards_usage(shcluster_label,app,title)` 
| `get_identity_info(shcluster_label,author)` 
| `get_identity_info(author)` 
| `fillnull_identity_info` 
| `get_macro_definition(shcluster_label,Macro_Reference)` 
| `strftime_format(updated)` 
| eval Num_Searches=mvcount(search) 
| eval Effective_autoRun = if(autoRun=""false"" AND submitButton=""true"" AND is_time_selector=""true"", ""false"", ""true"" ) 
| fillnull value=""false"" autoRun 
| fillnull value=""none"" submitButton acl_perms_read acl_perms_write auto_refresh_delay panel_title 
| fillnull value=""Undefined"" Splunk_Roles Splunk_Instance app sharing title label description type dashboard_size author search BaseSearch time_range Macro_Definition 
| search Index_Reference=""pcf_*"" 
| eval Num_Searches=mvcount(search) 
| rex field=time_range ""(?<time_range_epoch>\d{10})""
| rex field=time_range mode=sed ""s/\d{10}//"" 
| rex field=time_range mode=sed ""s/^-[0-9]d$|-[0-9]+h@h|-[0-9]+h@m|-[0-9]+m@m|-[0-9]+m$|-[0-9]+h$//""
| rex field=time_range mode=sed ""s/^-1d$|-7d@h$|^-30d@d$|^-30d$|^-[0-9]+s$|^@d$|-[0-9]+$//""
| eval time_range_epoch=min(time_range_epoch)
| eval time_diff = now() - time_range_epoch
| eval e_time_diff_in_days = round(time_diff/60/60/24,0)
| eval e_time_diff_in_days = if(e_time_diff_in_days>0,""-"" . e_time_diff_in_days . ""d*"",e_time_diff_in_days)
| eval time_range = mvappend(time_range,e_time_diff_in_days)
| where  mvfind(time_range,""d"")>0
| sort time_range
| table title time_range label shcluster_label Index_Reference app sharing acl_perms_read acl_perms_write author updated emp_name num_panels Num_Searches Effective_autoRun auto_refresh_delay submitButton autoRun  Latest_Access dashboard_size Report_Reference Dashboard_Reference Eventtype_Reference description  search",0
GMC-083,Ad-hoc Searches looking back over 90 Days,"PCF,GT90Days",Other,,"| tstats SUMMARIESONLY=TRUE ALLOW_OLD_SUMMARIES=FALSE
    `tstats_gmc_audit`
    FROM DATAMODEL=GMC
    WHERE nodename=Search_Activity.Audit_Search
    index=_audit
    AND Search_Activity.Audit_Search.search_type1 = ""adhoc""
    AND Search_Activity.Audit_Search.info1 = ""*""
    AND Search_Activity.Audit_Search.user1 = ""*""
    AND Search_Activity.Audit_Search.savedsearch_name1 = ""*""
    AND host = ""*""
    NOT Search_Activity.Audit_Search.savedsearch_name1 IN (""*global_monitoring_console*"", ""splunk_*_dashboard*"", ""splunk_*_*_lookup_*"", ""splunk_*_*_audit_search_activity_*"")
    BY _time Search_Activity.Audit_Search.search_id1 Search_Activity.Audit_Search.info1 
| `gmc_drop_dm_object_name(Search_Activity.Audit_Search)` 
| rename info1 AS info, search_id1 As search_id 
| fields _time host available_count considered_events datamodel decompressed_slices event_count dispatch_time exec_time info result_count roles savedsearch_name scan_count search search_et search_id search_lt search_startup_time search_type searched_buckets total_run_time total_slices user 
| eval Time_Diff=round((search_lt-search_et)/60/60/24,2) 
| where Time_Diff>=90 
| `gmc_convert_runtime('total_run_time')` 
| `get_normalized_search_id(search_id)` 
| `get_lookup_reference(search)` 
| `get_macro_reference(search)` 
| `get_datamodel_reference(search)` 
| `get_index_reference(search)` 
| `get_sourcetype_reference(search)` 
| `get_source_reference(search)` 
| `get_eventtype_reference(search)` 
| `get_rest_reference(search)` 
| `get_instance_info(host)` 
| `get_shcluster_label(host)` 
| `get_identity_info(user)` 
| `fillnull_identity_info` 
| `get_saved_searches_info(shcluster_label,savedsearch_name)` 
| `cron_descriptor(cron_schedule)` 
| eval search_et=if(search_et=""0"", ""All-Time"", search_et) 
| fillnull value=""no-search_id"" search_id_normalized 
| fillnull value=0 available_count considered_events decompressed_slices event_count result_count scan_count searched_buckets total_run_time total_slices 
| fillnull value=""Undefined"" shcluster_label datamodel savedsearch_type search cron_schedule_described service_title kpi_title auth_type 
| fillnull value=""Undefined"" 
| search shcluster_label=""*"" search_id_normalized=""***"" datamodel=""*"" search=""*pcf_*"" total_run_time>-1 searched_buckets>-1 Splunk_Roles=""*"" Lookup_Reference=""***"" savedsearch_type=""*"" Macro_Reference=""***"" Datamodel_Reference=""***"" Index_Reference=""***"" Sourcetype_Reference=""***"" Source_Reference=""***"" Eventtype_Reference=""***"" Rest_Reference=""***"" cron_schedule_described=""*"" service_title=""*"" kpi_title=""*"" emp_name=""*"" emp_title=""*"" emp_type=""*"" emp_status=""*"" emp_dep=""*"" emp_lob1=""*"" emp_cc=""*"" emp_city=""*"" emp_region1=""*"" emp_country=""*"" auth_type=""*"" result_count<999999999 search_lt=""*"" search_et=""*"" 
| eval Time_Diff=round(Time_Diff,0)
| fields shcluster_label search_type info  _time search_et search_lt Time_Diff user emp_email emp_first emp_last emp_dep emp_title search 
| `normalize_search_status` 
| `normalize_search_type(search_type)` 
| eval search_lt = strftime(search_lt, ""%A %B %d, %Y %I:%M:%S %p %Z"") 
| eval search_et = strftime(search_et, ""%A %B %d, %Y %I:%M:%S %p %Z"")
| bin _time span=1d
| stats count values(*) as * by _time user search
| fields count shcluster_label search_type info  _time search_et search_lt Time_Diff user emp_email emp_first emp_last emp_dep emp_title search",0
GMC-084,Generate Email's for Terminated Users,"terminated,sendresults",Scheduled_Jobs,DRAFT search to generate emails,"| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup
| search NOT app IN (splunk_*,Splunk*,alert_webhook,appsbrowser,cisco-app-ACI,SA-nix,chargeback)
| `get_instance_roles(Splunk_Instance)`
| `get_saved_searches_usage(shcluster_label, app, savedsearch_name)` 
| `get_identity_info(author)` | `fillnull_identity_info`
| `cron_descriptor(cron_schedule)`
| eval days_last_updated=round((now() - updated) / 86400 , 0)
| `strftime_format(scheduled_times)` | `strftime_format(next_scheduled_time)`
| `normalize_earliest_time(dispatch_earliest_time)` | `get_premium_app_job_class`
| fillnull value=0 action_summary_index correlationsearch_enabled dispatch_auto_cancel updated populate_lookup
| `strftime_format(updated)`
| fillnull value=""no-actions"" actions
| fillnull value=""Undefined"" Splunk_Roles Splunk_Instance app savedsearch_name description savedsearch_type sharing author owner disabled is_visible is_scheduled cron_schedule scheduled_times next_scheduled_time auto_summarize dispatch_earliest_time dispatch_latest_time schedule_priority max_concurrent schedule_window allow_skew realtime_schedule alert_severity alert_track alert_type removable run_n_times run_on_startup savedsearch_search action_email_to cron_schedule_described action_summary_index_name populate_lookup_dest summary_index_name Index_Reference

| search shcluster_label=""libertymutual-shc"" Splunk_Roles=""*"" Splunk_Instance=""*"" app=""*"" author=* sharing=user disabled=""*"" is_scheduled=""*"" savedsearch_name=""*"" savedsearch_type=""*"" savedsearch_search=""*"" Lookup_Reference=""*"" Datamodel_Reference=""*"" Macro_Reference=""*"" Index_Reference=""*"" Sourcetype_Reference=""*"" Source_Reference=""*"" Eventtype_Reference=""*"" Rest_Reference=""*"" action_email_to=""*"" auto_summarize=""*"" schedule_priority=""*"" schedule_window=""*"" realtime_schedule=""*"" run_on_startup=""*"" allow_skew=""*"" correlationsearch_enabled=""*"" action_summary_index=""*"" cron_schedule_described=""*"" emp_name=""*"" emp_type=""*"" emp_status=""Terminated"" emp_dep=""*"" emp_lob1=""*"" emp_cc=""*"" emp_title=""*"" emp_city=""*"" emp_region1=""*"" emp_country=""*"" dispatch_earliest_time_normalized=""*"" dispatch_latest_time=""*"" actions=""*"" dispatch_auto_cancel=""*"" updated=""*"" populate_lookup=""*"" populate_lookup_dest=""*"" summary_index_name=""*"" days_last_updated >= 90 |  table shcluster_label app sharing savedsearch_name savedsearch_type disabled is_scheduled updated days_last_updated description dispatch_earliest_time_normalized dispatch_latest_time cron_schedule cron_schedule_described scheduled_times next_scheduled_time realtime_schedule schedule_priority schedule_window allow_skew author emp_name emp_title emp_dep emp_lob1 emp_type emp_status run_n_times run_on_startup max_concurrent is_visible acl_perms_read acl_perms_write email email_to populate_lookup_dest script summary_index summary_index_name webhook webhook_param_url actions auto_summarize auto_summarize_cron_schedule dispatch_ttl dispatch_as logevent logevent_param_event lookup lookup_append lookup_filename script_filename 
| eval scheduled_times=mvindex(scheduled_times,0,0)
| search author=""n0003024""
| eval previous_employee=author
| eval previous_employee_name=emp_name
| `get_identity_info(author)`
| eval emp_manager=""n0211745"" `comment(""Force manager to be acceptable test user, not a C level exec"")`
| fields previous_employee previous_employee_name shcluster_label app sharing actions savedsearch_name savedsearch_type updated description  acl_* email* emp_manager
| `get_identity_info(emp_manager)`
| rename emp_email as email_to, emp_first as manager_first
| fields previous_employee previous_employee_name shcluster_label app sharing actions savedsearch_name savedsearch_type updated description  acl_* email* email_to manager_first
| eval email_body=""Hello "" . manager_first . "", Some employes who recently seperated from the firm have Splunk Objects that we are scheduling to delete in the near future. If you want to keep these items please take ownership of them. If you do nothing they will be deleted per corperate policy.""
| fields - manager_first _time
| sendresults showemail=0 showbody=0 showresults=1  subject=""Excess Employee Splunk Knowledge Objects""  msgstyle=""table {font-family:Arial;font-size:12px;border: 1px solid black;padding:3px}th {background-color:#AAAAAA;color:#fff;border-left: solid 1px #e9e9e9} td {border:solid 1px #e9e9e9}""",0
GMC-085,Search Bundle Objects by Size,"bundle,search,user",Search_Head_Cluster,Raw data suitable for stats to identify user objects in the search bundle and the size of those objects.,"index=_internal source=*2020_10_19_bundle_extraction.log earliest=-7d@d 
| `get_cluster_label(host)` 
| rex field=file_name ""apps/(?<app1>.*?)/"" 
| rex field=file_name ""users/\w+/(?<app2>.*?)/"" 
| rex field=file_name ""users/(?<user>.*?)/"" 
| eval app=coalesce(app1,app2) 
| `gmc_byte2human(file_size,3)` 
| `get_identity_info(user)` 
| table cluster_label app user emp_email file_name file_size file_size_MB 
| sort 0 - file_size",0
GMC-086,Report on all errors found in job activity by cluster,Errors,Health,,"index=gmc_summary search_name=splunk_rest_search_jobs_sh_summary_tracker error_messages!=""Search auto-canceled"" provenance!=""UI:Search"" 
| makemv delim=""#####"" error_messages 
| rex field=error_messages ""Error in\s\'(?<command>.*?)\'"" 
| rex field=error_messages ""Could not load lookup=(?<lookup>.*)"" 
| eval error_messages_normalized = case ( 
    match(error_messages, ""Error in '\w+'""), command . "" Command Errors"",
    match(error_messages, ""REST endpoint""), ""REST Command Errors"",
    match(error_messages, "" Could not load lookup=""), ""Error in loading lookup table:"" . lookup,
    true(), error_messages) 
| stats 
    Values(error_messages) As error_messages
    Values(label) As label
    Values(app) As Apps
    Dc(label) As Num_Jobs
    Dc(error_messages) As Num_error_messages
    count
    by provenance shcluster_label owner error_messages_normalized 
| sort - count",0
GMC-087,Find all Scheduled Jobs running < 5min interval,"Frequent,TTL",Scheduled_Jobs,Any of these jobs should have their TTL manually to 2p.,"| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
| where is_scheduled=""1"" AND disabled=""0"" 
| `cron_descriptor(cron_schedule)` 
| search cron_schedule_described IN (""Every 1 minutes*"",""Every 2 minutes*"", ""Every 3 minutes*"",""Every 4 minutes*"", ""Every minute*"") 
| table shcluster_label app savedsearch_name cron_schedule cron_schedule_described dispatch_ttl",0
GMC-088,Find Reports and Dashboards that need the dispatch.ttl value updated,automation,Scheduled_Jobs,"to use curl add these lines to the end of the search:
| rex field=rest_uri mode=sed ""s/^.*?:8089/https:\/\/localhost:8089/g""
| eval curl_command=""curl -k --netrc-file ~/.netrc -X POST "" . rest_uri . "" -H \""Content-Type:application/json\"" -d dispatch.ttl=3p""
| fields savedsearch_name curl_command
| stats count by curl_command
| fields curl_command","| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
  `comment(""Scheduled Searches that happen in the 1-4 minute range"")`
| where is_scheduled=""1"" AND disabled=""0"" 
| `cron_descriptor(cron_schedule)` 
| search cron_schedule_described IN (""Every 1 minutes*"",""Every 2 minutes*"", ""Every 3 minutes*"",""Every 4 minutes*"", ""Every minute*"") 
| eval an_event_type=if(isnull(an_event_type),""Scheduled"",NULL)
| fields _time shcluster_label app savedsearch_name sharing author updated is_scheduled disabled cron_schedule dispatch_ttl an_event_type
| append 
    [ from lookup:splunk_rest_data_ui_views_sh_kv_store_lookup 
    `comment(""All Scheduled reports that appear in any dashboard"")`
    | mvexpand Report_Reference 
    | where isnotnull(Report_Reference) AND Report_Reference!=""no-report-reference"" 
    | `get_saved_searches_info(shcluster_label,app,Report_Reference)` 
    | rename Report_Reference As savedsearch_name 
    | eval an_event_type=if(isnull(an_event_type),""Report"",NULL)
    | fields _time shcluster_label app savedsearch_name sharing author updated is_scheduled disabled cron_schedule dispatch_ttl an_event_type
    | where is_scheduled=1] 
| append
    [| from lookup:splunk_rest_data_ui_views_sh_kv_store_lookup 
| fields _time,shcluster_label,Splunk_Instance,Splunk_Roles,app,sharing,title,label,description,type,dashboard_size,author,location,updated,time_range,Report_Reference,Dashboard_Reference,Lookup_Reference,Datamodel_Reference,Macro_Reference,Index_Reference,Sourcetype_Reference,Source_Reference,Eventtype_Reference,Rest_Reference,search,BaseSearch,acl_perms_read,acl_perms_write,panel_title,num_panels,auto_refresh_delay,submitButton,autoRun 
| search NOT app IN (splunk_monitoring_console, splunk_archiver, simple_xml_examples, *global_monitoring_console,gmc*) NOT title IN (setup,home,about,settings,contents,help) 
| eval url=""http://"" . shcluster_label . "":8000/en-US/app/"" . app . ""/"" . title 
| `get_instance_roles(Splunk_Instance)` 
| `get_dashboards_usage(shcluster_label,app,title)` 
| `get_identity_info(shcluster_label,author)` 
| `get_identity_info(author)` 
| `fillnull_identity_info` 
| `get_macro_definition(shcluster_label,Macro_Reference)` 
| `strftime_format(updated)` 
| eval Num_Searches=mvcount(search) 
| eval Effective_autoRun = if(autoRun=""false"" AND submitButton=""true"" AND is_time_selector=""true"", ""false"", ""true"" ) 
| fillnull value=""false"" autoRun 
| fillnull value=""none"" submitButton acl_perms_read acl_perms_write auto_refresh_delay panel_title 
| fillnull value=""Undefined"" Splunk_Roles Splunk_Instance app sharing title label description type dashboard_size author search BaseSearch time_range Macro_Definition 
| search dashboard_size <= 10000000 Days_Latest_Access <= ""90"" Days_Latest_Access >= ""0"" num_panels >= -1 Num_Searches >= -1 
| `get_latest_access_human(Days_Latest_Access)` 
| eval Num_Searches=mvcount(search) 
| mvexpand Report_Reference 
| where isnotnull(Report_Reference) AND Report_Reference!=""no-report-reference"" 
| `get_saved_searches_info(shcluster_label,app,Report_Reference)` 
| rename Report_Reference As savedsearch_name 
| eval an_event_type=if(isnull(an_event_type),""Dash Called"",NULL)
| fields _time shcluster_label app savedsearch_name sharing author updated is_scheduled disabled cron_schedule cron_schedule_described dispatch_ttl an_event_type]
| `cron_descriptor(cron_schedule)` 
| fields _time shcluster_label app savedsearch_name sharing author updated is_scheduled disabled cron_schedule cron_schedule_described dispatch_ttl an_event_type
| where dispatch_ttl!=""3p"" AND shcluster_label=""libertymutual-shc""
`comment(""Temporary holding value of 3p being used in place of 2p while we wait to change the default"")`
| eval fudge_author = case ( 'sharing' == ""user"", 'author', 'sharing' == ""global"", ""nobody"", 'sharing' == ""app"", ""nobody"") 
| eval shcluster_label_rest=if(shcluster_label=""libertymutual-shc"", ""libertymutual"", shcluster_label . ""-libertymutual"") 
| eval encoded_title=savedsearch_name 
| rex field=encoded_title mode=sed ""s:%:%25:g s:\+:%2B:g s:\"":%22:g s:\(:%28:g s:\):%29:g s: :%20:g  s:<:%3C:g  s:>:%3E:g  s:#:%23:g  s:{:%7B:g  s:}:%7D:g  s:\|:%7C:g s:\\\:%5C:g  s:\^:%5E:g  s:~:%7E:g
     s:\[:%5B:g  s:\]:%5D:g  s:\`:%60:g  s:;:%3B:g  s:/:%2F:g  s:\?:%3F:g  s/:/%3A/g  s:@:%40:g  s:=:%3D:g  s:&:%26:g  s:\$:%24:g  s:\!:%21:g  s:\*:%2A:g"" 
| eval rest_uri=""https://"" . shcluster_label_rest . "".splunkcloud.com:8089/servicesNS/"" . fudge_author . ""/"" . app . ""/saved/searches/"" . encoded_title 
| rename _time As KV_Store_Update , updated As Job_Update_Time 
| `strftime_format(Job_Update_Time)` 
| `strftime_format(KV_Store_Update)` 
| `get_identity_info(author)` 
| eval curl_options=""-d dispatch.ttl=2p"" 
| fields KV_Store_Update Job_Update_Time shcluster_label app savedsearch_name sharing author emp_first emp_last emp_email is_scheduled cron_schedule_described dispatch_ttl rest_uri curl_options an_event_type
| table savedsearch_name rest_uri curl_options",0
GMC-089,Report on All Deployment Servers,Deployments,Knowledge_Objects ,,"index=_internal host IN (vxkip-hmrsds01 vxkip-hmrsds02 vxkip-hmrsds03 vxpip-hhspds01 vxpip-hmrsds01 vxpip-hmrsds02 vxpip-hmrsds03 vxpip-hmrsds04 vxrip-hmrsds01 vxrip-hmrsds02) ""Splunk_TA_windows"" 
| stats values(app) As Apps by host sc 
| rename sc as DS_Server_Class 
| fields _time host DS_Server_Class Apps 
| join host DS_Server_Class 
    [ search index=_internal component=ClientSessionsManager host IN (vxkip-hmrsds01 vxkip-hmrsds02 vxkip-hmrsds03 vxpip-hhspds01 vxpip-hmrsds01 vxpip-hmrsds02 vxpip-hmrsds03 vxpip-hmrsds04 vxrip-hmrsds01 vxrip-hmrsds02) 
    | stats dc(ip) as Num_Clients values(name) As DS_Apps by host sc 
    | rename sc as DS_Server_Class 
    | fields _time host DS_Server_Class Num_Clients ] 
| table host DS_Server_Class Num_Clients Apps",0
GMC-090,URI Creation,"automation,uri",Scheduled_Jobs,Draft format to create URI from variable values.,"| makeresults 
| eval author=""dfreed"", sharing=""app"", shcluster_label=""libertymutual-shc"", app=""search"", savedsearch_name=""Testing Report for Z to Change Settings on."" 
| eval fudge_author = case (
    'sharing' == ""user"", 'author',
    'sharing' == ""global"", ""nobody"",
    'sharing' == ""app"", ""nobody"") 
| eval shcluster_label_rest=if(shcluster_label=""libertymutual-shc"", ""libertymutual"", shcluster_label . ""-libertymutual"") 
| eval job_url=""https://"" . shcluster_label_rest . "".splunkcloud.com/app/"" . app . ""/search?s="" . savedsearch_name 
| eval encoded_title=savedsearch_name 
| eval job_property=case(""disable""=""disable"" OR ""disable""=""enable"", ""/disable"", true(), """") 
| eval curl_options=case(!match(""disable"", ""delete|disable|enable""), ""-d disable=\""1\"""", true(), """") 
| rex field=encoded_title mode=sed
    ""s:%:%25:g s:\+:%2B:g s:\"":%22:g s:\(:%28:g s:\):%29:g s: :%20:g  s:<:%3C:g  s:>:%3E:g  s:#:%23:g  s:{:%7B:g  s:}:%7D:g  s:\|:%7C:g s:\\\:%5C:g  s:\^:%5E:g  s:~:%7E:g
     s:\[:%5B:g  s:\]:%5D:g  s:\`:%60:g  s:;:%3B:g  s:/:%2F:g  s:\?:%3F:g  s/:/%3A/g  s:@:%40:g  s:=:%3D:g  s:&:%26:g  s:\$:%24:g  s:\!:%21:g  s:\*:%2A:g"" 
| eval rest_uri=""\""https://"" . shcluster_label_rest . "".splunkcloud.com:8089/servicesNS/"" . fudge_author . ""/"" . app . ""/saved/searches/"" . encoded_title . ""\"""" 
| eval Request=case(""disable""=""delete"", ""DELETE"", true(), ""POST"") 
| table savedsearch_name app sharing author Request rest_uri",0
GMC-091,Report on all Scheduled Jobs that drifted from the factory default,"Drifted,automation",Scheduled_Jobs,These are scheduled jobs that got their scheduling properties such as schedule window set incorrectly.,"| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
| search shcluster_label=libertymutual-shc disabled=0 is_scheduled=1 schedule_window=0 
| append 
    [| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
    | search shcluster_label=libertymutual-shc disabled=0 is_scheduled=1 allow_skew=0 ] 
| append 
    [| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
    | search shcluster_label=libertymutual-shc disabled=0 is_scheduled=1 sharing=user (allow_skew!=5m OR schedule_window!=auto OR schedule_priority!=default) ] 
| append 
    [| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
    | search shcluster_label=libertymutual-shc realtime_schedule!=1 ] 
| fields shcluster_label app author sharing savedsearch_name cron_schedule schedule_window allow_skew schedule_priority realtime_schedule is_scheduled disabled 
| search NOT savedsearch_name IN (_ScheduledView__*) 
| stats last(*) as * by shcluster_label savedsearch_name 
| fields shcluster_label app author sharing savedsearch_name cron_schedule is_scheduled disabled schedule_window allow_skew schedule_priority realtime_schedule


| eval schedule_window=""auto"", allow_skew=""5m"", schedule_priority=""default"", realtime_schedule=""1"" 
| fields shcluster_label app author sharing savedsearch_name cron_schedule is_scheduled disabled schedule_window allow_skew schedule_priority realtime_schedule 
| eval fudge_author = case ( 'sharing' == ""user"", 'author', 'sharing' == ""global"", ""nobody"", 'sharing' == ""app"", ""nobody"") 
| eval shcluster_label_rest=if(shcluster_label=""libertymutual-shc"", ""libertymutual"", shcluster_label . ""-libertymutual"") 
| eval encoded_title=savedsearch_name 
| rex field=encoded_title mode=sed ""s:%:%25:g s:\+:%2B:g s:\"":%22:g s:\(:%28:g s:\):%29:g s: :%20:g  s:<:%3C:g  s:>:%3E:g  s:#:%23:g  s:{:%7B:g  s:}:%7D:g  s:\|:%7C:g s:\\\:%5C:g  s:\^:%5E:g  s:~:%7E:g
     s:\[:%5B:g  s:\]:%5D:g  s:\`:%60:g  s:;:%3B:g  s:/:%2F:g  s:\?:%3F:g  s/:/%3A/g  s:@:%40:g  s:=:%3D:g  s:&:%26:g  s:\$:%24:g  s:\!:%21:g  s:\*:%2A:g"" 
| eval rest_uri=""https://"" . shcluster_label_rest . "".splunkcloud.com:8089/servicesNS/"" . fudge_author . ""/"" . app . ""/saved/searches/"" . encoded_title 
| rename _time As KV_Store_Update , updated As Job_Update_Time 
| `strftime_format(Job_Update_Time)` 
| `strftime_format(KV_Store_Update)` 
| `get_identity_info(author)` 
| eval curl_options=""-d allow_skew=\""5m\"" -d schedule_window=\""auto\"" -d realtime_schedule=\""1\"" -d schedule_priority=\""default\""""
| table savedsearch_name rest_uri curl_options an_event_type 
| rex field=rest_uri mode=sed ""s/^.*?:8089/https:\/\/localhost:8089/g"" 
| eval curl_command=""curl -k --netrc-file ~/.netrc -X POST "" . rest_uri . "" -H \""Content-Type:application/json\"" "" . curl_options 
| fields savedsearch_name curl_command 
| stats count by curl_command 
| fields curl_command",0
GMC-092,GMC 091 converted to provide executable CURL script commands,"automation,uri",Scheduled_Jobs,"Note that some objects will fail to execute the CURL script. These objects are items with broken searches that throw errors, searches that use private datamodels, etc. This is expected behavior.","| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
| search shcluster_label=libertymutual-shc disabled=0 is_scheduled=1 schedule_window=0 
| append 
    [| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
    | search shcluster_label=libertymutual-shc disabled=0 is_scheduled=1 allow_skew=0 ] 
| append 
    [| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
    | search shcluster_label=libertymutual-shc disabled=0 is_scheduled=1 sharing=user (allow_skew!=5m OR schedule_window!=auto OR schedule_priority!=default) ] 
| append 
    [| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
    | search shcluster_label=libertymutual-shc realtime_schedule!=1 ] 
| fields shcluster_label app author sharing savedsearch_name cron_schedule schedule_window allow_skew schedule_priority realtime_schedule is_scheduled disabled 
| search NOT savedsearch_name IN (_ScheduledView__*) 
| stats last(*) as * by shcluster_label savedsearch_name 
| fields shcluster_label app author sharing savedsearch_name cron_schedule is_scheduled disabled schedule_window allow_skew schedule_priority realtime_schedule


| eval schedule_window=""auto"", allow_skew=""5m"", schedule_priority=""default"", realtime_schedule=""1"" 
| fields shcluster_label app author sharing savedsearch_name cron_schedule is_scheduled disabled schedule_window allow_skew schedule_priority realtime_schedule 
| eval fudge_author = case ( 'sharing' == ""user"", 'author', 'sharing' == ""global"", ""nobody"", 'sharing' == ""app"", ""nobody"") 
| eval shcluster_label_rest=if(shcluster_label=""libertymutual-shc"", ""libertymutual"", shcluster_label . ""-libertymutual"") 
| eval encoded_title=savedsearch_name 
| rex field=encoded_title mode=sed ""s:%:%25:g s:\+:%2B:g s:\"":%22:g s:\(:%28:g s:\):%29:g s: :%20:g  s:<:%3C:g  s:>:%3E:g  s:#:%23:g  s:{:%7B:g  s:}:%7D:g  s:\|:%7C:g s:\\\:%5C:g  s:\^:%5E:g  s:~:%7E:g
     s:\[:%5B:g  s:\]:%5D:g  s:\`:%60:g  s:;:%3B:g  s:/:%2F:g  s:\?:%3F:g  s/:/%3A/g  s:@:%40:g  s:=:%3D:g  s:&:%26:g  s:\$:%24:g  s:\!:%21:g  s:\*:%2A:g"" 
| eval rest_uri=""https://"" . shcluster_label_rest . "".splunkcloud.com:8089/servicesNS/"" . fudge_author . ""/"" . app . ""/saved/searches/"" . encoded_title 
| rename _time As KV_Store_Update , updated As Job_Update_Time 
| `strftime_format(Job_Update_Time)` 
| `strftime_format(KV_Store_Update)` 
| `get_identity_info(author)` 
| eval curl_options=""-d allow_skew=\""5m\"" -d schedule_window=\""auto\"" -d realtime_schedule=\""1\"" -d schedule_priority=\""default\""""
| table savedsearch_name rest_uri curl_options an_event_type 
| rex field=rest_uri mode=sed ""s/^.*?:8089/https:\/\/localhost:8089/g"" 
| eval curl_command=""curl -k --netrc-file ~/.netrc -X POST "" . rest_uri . "" -H \""Content-Type:application/json\"" "" . curl_options 
| fields savedsearch_name curl_command 
| stats count by curl_command 
| fields curl_command",0
GMC-093A,Summarize Archived Knowledge Objects into the gmc_summary index,automation,Scheduled_Jobs,"This example prepares a list of saved searches belonging to terminated users.  if you have a different use case, replace the where clause with the appropriate filter from GMC SH-17.

Make sure to set testmode=false after you prepare the search that finds all of the knowledge objects scheduled for deletion","| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
| `get_identity_info(author)` 

| where shcluster_label=""libertymutual-shc"" AND emp_status=""Terminated"" AND ( (is_scheduled=0 OR disabled=1) OR (is_scheduled=1 AND disabled=0 AND isnull(actions)) ) 


| stats 
    Values(correlationsearch_related_searches) As correlationsearch_related_searches
    Values(actions) As actions 
    Values(email_to) As email_to
    Values(acl_perms_read) As acl_perms_read Values(acl_perms_write) As acl_perms_write
    Last(*) As *
    BY shcluster_label app sharing author savedsearch_name 
| rename savedsearch_name As ko_name , savedsearch_search As search 
| eval _time=now() , ko_type=""saved_search"" 
| table _time,ko_name,ko_type,acl_perms_read,acl_perms_write,actions,allow_skew,app,author,correlationsearch_enabled,correlationsearch_label,correlationsearch_related_searches,cron_schedule,data,description,dispatch_as,dispatch_earliest_time,dispatch_latest_time,dispatch_ttl,email_to,notable_drilldown_name,notable_drilldown_search,notable_next_steps,notable_rule_description,notable_rule_title,notable_security_domain,notable_severity,onprem_url,realtime_schedule,schedule_priority,schedule_window,search,sharing,shcluster_label,updated 
| foreach correlationsearch_related_searches acl_perms_* actions email_to 
    [ eval <<FIELD>>=mvjoin(mvsort(mvdedup('<<FIELD>>')), ""#####"") ] 
| eval search_name=""splunk_rest_saved_searches_sh_archive_summary_data"" 
| collect index=`gmc_setup_summary_index` testmode=true 
| stats count",0
GMC-093B,Populate the Knowledge Objects Archive KV Store on the SHC,automation,Scheduled_Jobs,Run GMC-093A first to prepare the data in the gmc_summary index for the KV Store.  This search runs on the SHC not the GIS since the KV Store lives there.,"index=gmc_summary search_name=splunk_rest_saved_searches_sh_archive_summary_data earliest=-7d@d 
| stats Latest(*) As * By shcluster_label app sharing author ko_name 
| foreach correlationsearch_related_searches acl_perms_* actions email_to 
    [ makemv delim=""#####"" <<FIELD>> ] 
| eval _time=now() , ko_type=""saved_search"" 
| table _time,ko_name,ko_type,acl_perms_read,acl_perms_write,actions,allow_skew,app,author,correlationsearch_enabled,correlationsearch_label,correlationsearch_related_searches,cron_schedule,data,description,dispatch_as,dispatch_earliest_time,dispatch_latest_time,dispatch_ttl,email_to,notable_drilldown_name,notable_drilldown_search,notable_next_steps,notable_rule_description,notable_rule_title,notable_security_domain,notable_severity,onprem_url,realtime_schedule,schedule_priority,schedule_window,search,sharing,shcluster_label,updated 
| search NOT 
    [| inputlookup splunk_ko_archive_kv_store_lookup 
    | fields shcluster_label app sharing author ko_name ] 
| outputlookup splunk_ko_archive_kv_store_lookup createinapp=true create_empty=true override_if_empty=false append=true 
| stats count",0
GMC-094,Script to create URL's for the dispatch.ttl update process,"automation,uri",Scheduled_Jobs,,"| from lookup:splunk_rest_saved_searches_sh_kv_store_lookup 
  `comment(""Scheduled Searches that happen in the 1-4 minute range"")`
| where is_scheduled=""1"" AND disabled=""0"" 
| `cron_descriptor(cron_schedule)` 
| search cron_schedule_described IN (""Every 1 minutes*"",""Every 2 minutes*"", ""Every 3 minutes*"",""Every 4 minutes*"", ""Every minute*"") 
| eval an_event_type=if(isnull(an_event_type),""Scheduled"",NULL)
| fields _time shcluster_label app savedsearch_name sharing author updated is_scheduled disabled cron_schedule dispatch_ttl an_event_type
| append 
    [ from lookup:splunk_rest_data_ui_views_sh_kv_store_lookup 
    `comment(""All Scheduled reports that appear in any dashboard"")`
    | mvexpand Report_Reference 
    | where isnotnull(Report_Reference) AND Report_Reference!=""no-report-reference"" 
    | `get_saved_searches_info(shcluster_label,app,Report_Reference)` 
    | rename Report_Reference As savedsearch_name 
    | eval an_event_type=if(isnull(an_event_type),""Report"",NULL)
    | fields _time shcluster_label app savedsearch_name sharing author updated is_scheduled disabled cron_schedule dispatch_ttl an_event_type
    | where is_scheduled=1] 
| append
    [| from lookup:splunk_rest_data_ui_views_sh_kv_store_lookup 
| fields _time,shcluster_label,Splunk_Instance,Splunk_Roles,app,sharing,title,label,description,type,dashboard_size,author,location,updated,time_range,Report_Reference,Dashboard_Reference,Lookup_Reference,Datamodel_Reference,Macro_Reference,Index_Reference,Sourcetype_Reference,Source_Reference,Eventtype_Reference,Rest_Reference,search,BaseSearch,acl_perms_read,acl_perms_write,panel_title,num_panels,auto_refresh_delay,submitButton,autoRun 
| search NOT app IN (splunk_monitoring_console, splunk_archiver, simple_xml_examples, *global_monitoring_console,gmc*) NOT title IN (setup,home,about,settings,contents,help) 
| eval url=""http://"" . shcluster_label . "":8000/en-US/app/"" . app . ""/"" . title 
| `get_instance_roles(Splunk_Instance)` 
| `get_dashboards_usage(shcluster_label,app,title)` 
| `get_identity_info(shcluster_label,author)` 
| `get_identity_info(author)` 
| `fillnull_identity_info` 
| `get_macro_definition(shcluster_label,Macro_Reference)` 
| `strftime_format(updated)` 
| eval Num_Searches=mvcount(search) 
| eval Effective_autoRun = if(autoRun=""false"" AND submitButton=""true"" AND is_time_selector=""true"", ""false"", ""true"" ) 
| fillnull value=""false"" autoRun 
| fillnull value=""none"" submitButton acl_perms_read acl_perms_write auto_refresh_delay panel_title 
| fillnull value=""Undefined"" Splunk_Roles Splunk_Instance app sharing title label description type dashboard_size author search BaseSearch time_range Macro_Definition 
| search dashboard_size <= 10000000 Days_Latest_Access <= ""90"" Days_Latest_Access >= ""0"" num_panels >= -1 Num_Searches >= -1 
| `get_latest_access_human(Days_Latest_Access)` 
| eval Num_Searches=mvcount(search) 
| mvexpand Report_Reference 
| where isnotnull(Report_Reference) AND Report_Reference!=""no-report-reference"" 
| `get_saved_searches_info(shcluster_label,app,Report_Reference)` 
| rename Report_Reference As savedsearch_name 
| eval an_event_type=if(isnull(an_event_type),""Dash Called"",NULL)
| fields _time shcluster_label app savedsearch_name sharing author updated is_scheduled disabled cron_schedule cron_schedule_described dispatch_ttl an_event_type]
| `cron_descriptor(cron_schedule)` 
| fields _time shcluster_label app savedsearch_name sharing author updated is_scheduled disabled cron_schedule cron_schedule_described dispatch_ttl an_event_type
| where dispatch_ttl=""3p"" AND shcluster_label=""libertymutual-shc""
`comment(""Temporary holding value of 3p being used in place of 2p while we wait to change the default"")`
| eval fudge_author = case ( 'sharing' == ""user"", 'author', 'sharing' == ""global"", ""nobody"", 'sharing' == ""app"", ""nobody"") 
| eval shcluster_label_rest=if(shcluster_label=""libertymutual-shc"", ""libertymutual"", shcluster_label . ""-libertymutual"") 
| eval encoded_title=savedsearch_name 
| rex field=encoded_title mode=sed ""s:%:%25:g s:':%25:g s:\+:%2B:g s:\"":%22:g s:\(:%28:g s:\):%29:g s: :%20:g  s:<:%3C:g  s:>:%3E:g  s:#:%23:g  s:{:%7B:g  s:}:%7D:g  s:\|:%7C:g s:\\\:%5C:g  s:\^:%5E:g  s:~:%7E:g
     s:\[:%5B:g  s:\]:%5D:g  s:\`:%60:g  s:;:%3B:g  s:/:%2F:g  s:\?:%3F:g  s/:/%3A/g  s:@:%40:g  s:=:%3D:g  s:&:%26:g  s:\$:%24:g  s:\!:%21:g  s:\*:%2A:g"" 
| eval rest_uri=""https://"" . shcluster_label_rest . "".splunkcloud.com:8089/servicesNS/"" . fudge_author . ""/"" . app . ""/saved/searches/"" . encoded_title 
| rename _time As KV_Store_Update , updated As Job_Update_Time 
| `strftime_format(Job_Update_Time)` 
| `strftime_format(KV_Store_Update)` 
| `get_identity_info(author)` 
| eval curl_options=""-d dispatch.ttl=2p"" 
| fields KV_Store_Update Job_Update_Time shcluster_label app savedsearch_name sharing author emp_first emp_last emp_email is_scheduled cron_schedule_described dispatch_ttl rest_uri curl_options an_event_type",0
